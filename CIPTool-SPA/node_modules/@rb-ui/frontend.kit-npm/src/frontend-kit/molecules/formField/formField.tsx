import * as React from 'react';
import { TextField } from '../../atoms/textField/textField';
import { TextArea } from '../../atoms/textArea/textArea';
import { RadioButton } from '../../atoms/radioButton/radioButton';
import { Checkbox } from '../../atoms/checkbox/checkbox';
import { Notification } from '../../atoms/notification/notification';

class FormFieldProps {
  fieldType: 'text' | 'password' | 'textarea' | 'radio' | 'checkbox';
  label?: string;
  placeholder?: string;
  id: string;
  size?: 'quarter' | 'half';
  notification?: string;
  state?: 'success' | 'warning' | 'error';
  inputName?: string;
}

const FormField: React.FunctionComponent<FormFieldProps> = ({
  fieldType = 'text',
  label = null,
  placeholder = null,
  id,
  size,
  notification,
  state,
  inputName,
}) => {
  const fieldClasses = ['m-form-field'];

  if (fieldType === 'radio') {
    fieldClasses.push('m-form-field--radio');
  }

  if (fieldType === 'checkbox') {
    fieldClasses.push('m-form-field--checkbox');
  }

  if (size) {
    fieldClasses.push(`-${size}`);
  }

  const fieldClass = fieldClasses.join(' ');

  return (
    <div className={fieldClass}>
      {fieldType === 'text' && (
        <TextField
          label={label}
          placeholder={placeholder}
          id={id}
          state={state}
        />
      )}
      {fieldType === 'password' && (
        <TextField
          label={label}
          placeholder={placeholder}
          id={id}
          isPassword
          state={state}
        />
      )}
      {fieldType === 'textarea' && (
        <TextArea
          label={label}
          placeholder={placeholder}
          id={id}
          state={state}
        />
      )}
      {fieldType === 'radio' && (
        <RadioButton label={label} id={id} inputName={inputName} />
      )}
      {fieldType === 'checkbox' && (
        <Checkbox labelCheckbox={label} id={id} state={state} />
      )}
      {notification && (
        <Notification variant="text" type={state || 'neutral'}>
          {notification}
        </Notification>
      )}
    </div>
  );
};

export { FormField, FormFieldProps };
