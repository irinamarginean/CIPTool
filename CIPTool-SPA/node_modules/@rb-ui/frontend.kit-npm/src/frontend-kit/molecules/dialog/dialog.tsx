import * as React from 'react';

import classNames from 'classnames';

import { Box } from '../../atoms/box/box';
import { Button } from '../../atoms/button/button';
import { UiIcon } from '../../atoms/uiIcon/uiIcon';

import DialogComponent from './index';

class DialogProps {
  // variant identifier,
  variant?: 's' | 'alert';
  // a page-unique identifier
  dialogId?: string;
  // if true, show as modal
  modal?: boolean;
  // if true, show a close button,
  closeBtn?: boolean;
  // only for alert variant: identifier of the alert level
  alertLevel?: string;
  // The title of the dialog box
  dialogTitle?: string;
  // The content of the dialog box
  dialogBody?: string;
  // The error code of the dialog box
  dialogCode?: string;
}

const alertLevelToIconName = {
  success: 'ok',
  warning: 'warning',
  error: 'error',
  info: 'info',
};

const Dialog: React.FunctionComponent<DialogProps> = ({
  variant,
  modal = false,
  dialogId,
  closeBtn = false,
  alertLevel = 'info',
  dialogTitle = 'Dialog Title',
  dialogBody = 'Paragraph Text View standard regular Lorem ipsum dolor sit amet, consectetur sadipisicing elitr, sed diam nonumy',
  dialogCode = 'Error code 01 B0 5C H0 23 04',
}) => {
  const prefixedDialogId = DialogComponent.dialogId(dialogId);
  const dialogTitleId: string = `${prefixedDialogId}-title`;
  const dialogDescriptionId: string = `${prefixedDialogId}-description`;
  
  const dialogClasses = classNames([
    'm-dialog',
    { [`m-dialog--${variant}`]: variant },
  ]);

  return (
    <div className={dialogClasses} id={prefixedDialogId} role="dialog" aria-labelledby={dialogTitleId}>
      <Box modal={modal} modalId={`modal-for-${prefixedDialogId}`}>
        {closeBtn && <Button type="close" label="close" action="close" />}
        <div className="m-dialog__content">
          {variant === 'alert' && (
            <div className="m-dialog__title" id={dialogTitleId}>
              <UiIcon name={alertLevelToIconName[alertLevel]} />
              {dialogTitle}
            </div>
          )}
          <div className="m-dialog__body" id={dialogDescriptionId}>{dialogBody}</div>
          {variant === 'alert' && (
            <div className="m-dialog__code">{dialogCode}</div>
          )}
          <div className="m-dialog__actions">
            <Button label="confirm" type="primary" action="confirm" />
            {variant !== 's' && (
              <Button label="cancel" type="secondary" action="cancel" />
            )}
          </div>
        </div>
      </Box>
    </div>
  );
};

export { Dialog, DialogProps };
