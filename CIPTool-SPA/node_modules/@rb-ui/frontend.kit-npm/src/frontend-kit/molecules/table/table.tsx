import * as React from 'react';

import { Icon } from '../../atoms/icon/icon';

enum Variant {
  HeaderTop = 'header-top',
  HeaderTopLeft = 'header-top-left',
}
class TableProps {
  variant: Variant;
}

/**
 * @name    m-table
 * @type    molecule
 *
 * @param   variant       Predefined variant of the table example
 *
 * @description
 * This is the whole table molecule
 */

function renderHeaderRow(variant: string): any {
  let tableCellClass: string;

  if (variant === 'header-top') {
    tableCellClass = '-highlighted';
  }
  if (variant === 'header-top-left') {
    tableCellClass = '-highlighted -bold';
  }

  return (
    <tr>
      <th className={tableCellClass}>Highlight</th>
      <th className={tableCellClass}>Highlight</th>
      <th className={tableCellClass}>Highlight</th>
      <th className={tableCellClass}>Highlight</th>
      <th className={tableCellClass}>Highlight</th>
    </tr>
  );
}

function renderRow(variant: string): any {
  let firstCell: any;

  if (variant === Variant.HeaderTop) {
    firstCell = <td>Neutral</td>;
  }
  if (variant === Variant.HeaderTopLeft) {
    firstCell = <th className="-highlighted">Highlight</th>;
  }

  return (
    <tr>
      {firstCell}
      <td>Neutral</td>
      <td>
        <Icon iconName="emoji-happy" titleText="happy emoji" />
      </td>
      <td>Neutral</td>
      <td>Neutral</td>
    </tr>
  );
}

const Table: React.FunctionComponent<TableProps> = ({
  variant,
}: TableProps) => {
  return (
    <table className="m-table" aria-label="Highlights">
      <thead>{renderHeaderRow(variant)}</thead>
      <tbody>
        {renderRow(variant)}
        {renderRow(variant)}
        {renderRow(variant)}
        {renderRow(variant)}
      </tbody>
    </table>
  );
};

export { Table, TableProps, Variant };
