import BaseComponent from '../../baseComponent';

const SELECT = 'select';
const ARROW_UP_CLASS = `a-dropdown--clicked`;

export default class Dropdown extends BaseComponent {
  protected static events = ['onClick'];

  private readonly selectBox: HTMLElement;

  constructor(container: HTMLElement) {
    super(container);

    /**
     * Define DOM Elements and Variables
     */
    this.selectBox = container.querySelector(SELECT);

    function removeUpArrow(): void {
      document.removeEventListener('mouseup', removeUpArrow);
      setTimeout(() => {
        container.classList.remove(ARROW_UP_CLASS);
      }, 1);
    }

    function toggleUpArrow(): void {
      if (!container.classList.contains(ARROW_UP_CLASS)) {
        container.classList.add(ARROW_UP_CLASS);
        document.addEventListener('mouseup', removeUpArrow);
      } else {
        container.classList.remove(ARROW_UP_CLASS);
      }
    }

    if (this.selectBox instanceof HTMLElement) {
      // handles all mouse click event
      this.selectBox.addEventListener('click', () => {
        toggleUpArrow();
      });

      /**
       * handles all change event.
       * The problem is when we open select and doesn't change the value,
       * then of course the event is not triggered
       * */
      this.selectBox.addEventListener('change', () => {
        removeUpArrow();
      });

      // handles close the select action when user press Escape or Tab button
      this.selectBox.addEventListener('keyup', event => {
        if (event.code === 'Escape' || event.code === 'Tab') {
          removeUpArrow();
        }
      });

      // handles open/close the select action when user press Enter
      this.selectBox.addEventListener('keypress', event => {
        if (event.code === 'Enter') {
          toggleUpArrow();
        }
      });
    }
  }
}
